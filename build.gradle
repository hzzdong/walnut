apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "war"

group = 'org.nutz'
version = '1.r.59-SNAPSHOT'

description = "一台神奇的计算机"

sourceCompatibility = 1.8
targetCompatibility = 1.8

def version_tag = getDate()

sourceSets {
    main{
    	java {
    		srcDirs = ["$projectDir/src"]
    	}
    	resources {
    		srcDirs = ["$projectDir/conf"]
    	}
    }
    test {
    	java {
    		srcDirs "$projectDir/test"
    	}
    }
}

processResources {
    from ('src'){
        exclude '**/*.java';
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
	  options.compilerArgs = ["-parameters"]
}

repositories {
    //maven { url "http://maven.nutz.cn/nexus/content/repositories/central"}
    //mavenLocal()
    maven { url "https://jfrog.nutz.cn/artifactory/jcenter"}
    maven { url "https://jfrog.nutz.cn/artifactory/snapshots"}
}
dependencies {
    compile group: 'org.nutz', name: 'nutz', version:'1.r.60-SNAPSHOT'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version:'9.2.19.v20160908'
    compile group: 'org.eclipse.jetty', name: 'jetty-jsp', version:'9.2.19.v20160908'
    compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version:'9.2.19.v20160908'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version:'9.2.19.v20160908'
    compile group: 'org.eclipse.jetty.websocket', name: 'websocket-server', version:'9.2.19.v20160908'
    compile group: 'org.eclipse.jetty.websocket', name: 'websocket-client', version:'9.2.19.v20160908'
    compile group: 'org.eclipse.jetty.websocket', name: 'javax-websocket-server-impl', version:'9.2.19.v20160908'
    compile(group: 'org.nutz', name: 'nutz-web', version:'1.r.60-SNAPSHOT') {
		exclude(module: 'jetty-all-server')
		exclude(module: 'javax.servlet.jsp')
    }
    compile group: 'org.apache.commons', name: 'commons-email', version:'1.4'
    compile group: 'org.jsoup', name: 'jsoup', version:'1.8.3'
    compile group: 'org.nutz', name: 'nutzmongo', version:'1.r.60-SNAPSHOT'
    compile group: 'org.nutz', name: 'nutzwx', version:'1.r.58'
    compile group: 'org.nutz', name: 'nutz-plugins-qrcode', version:'1.r.58'
    compile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version:'2.19'
    compile group: 'org.nutz', name: 'nutz-quartz', version:'1.r.60-SNAPSHOT'
    compile group: 'com.qiniu', name: 'qiniu-java-sdk', version:'7.0.8'
    compile group: 'org.apache.sshd', name: 'sshd-core', version:'1.1.1'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.13'
    compile group: 'cn.jpush.api', name: 'jpush-client', version:'3.2.8'
    compile group: 'org.brickred', name: 'socialauth', version:'4.10'
    compile group: 'org.nutz', name: 'nutz-mipush-sdk', version:'3.0.MOD'
    compile group: 'javax.websocket', name: 'javax.websocket-api', version:'1.1'
    runtime group: 'log4j', name: 'log4j', version:'1.2.17'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    compile group: 'org.apache.ftpserver', name: 'ftpserver-core', version:'1.1.0'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.nutz:nutz:1.r.58'
    }
}

import org.nutz.lang.Files

import org.apache.tools.ant.taskdefs.condition.Os

task lessc() << {
	FileTree tree = fileTree('ROOT') {
		include "**/*.less"
		exclude "**/font-awesome*/**/*.*"
	}
	tree.each {File file ->
    	def _src = file.path
    	def _dst = _src.substring(0, _src.length() - 4) + 'css'
    	println _src
    	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    		exec {
    			commandLine "cmd.exe", "/c", "lessc" , _src, _dst
    			ignoreExitValue true
    		}
    	} else {
    		exec {
    			commandLine "lessc" , _src, _dst
    			ignoreExitValue true
    		}
    	}
	}
}

task wbuild(dependsOn: classes) << {
	copy {
		from sourceSets.main.output
		into "build/wzip/classes"
		exclude '**/web_local.properties'
	}
	copy {
		from "WebContent"
		into "build/wzip/WebContent"
	}
	copy {
		from "ROOT"
		into "build/wzip/ROOT"
	}
	copy {
		from configurations.runtime
		into "build/wzip/libs"
	}

	Files.write(file('build/wzip/build.properties'), "walnut.version="+version_tag)

   	def tmpWin32 = '''java -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -cp "classes;libs/*"'''
   	def tmpUnix = '''touch classes/web_local.properties; java -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -cp "classes:libs/*"'''
   	tmpWin32 += " org.nutz.web.WebLauncher"
   	Files.write(file('build/wzip/start.bat'), tmpWin32)

   	tmpUnix += " org.nutz.web.WebLauncher"
   	Files.write(file('build/wzip/start.sh'), tmpUnix)
   	file('build/wzip/start.sh').setExecutable(true, false)

   	Files.write(file('build/wzip/stop.sh'), '''#!/bin/bash
		killall java
	''')
   	file('build/wzip/stop.sh').setExecutable(true, false)

   	def web_props = Files.read(file('build/wzip/classes/web.properties'))
   	web_props = web_props.replaceAll("~/workspace/git/github/walnut", ".")
   	Files.write(file('build/wzip/classes/web.properties'), web_props)

   	Files.write(file('build/wzip/run.sh'), '''
cd "$(dirname "$0")"
cp $WUPROOT/web_local.properties classes/web_local.properties
touch classes/web_local.properties
export JAVA_HOME=$WUPROOT/jdk
export PATH=$JAVA_HOME/bin:$PATH
./start.sh
	''')
	file('build/wzip/run.sh').setExecutable(true, false)

   	Files.write(file('build/update'), '''#!/bin/bash
   		killall java
   		rm -r $WUPROOT/$APPNAME.old
   		mv $WUPROOT/$APPNAME $WUPROOT/$APPNAME.old
   		mkdir $WUPROOT/$APPNAME/
   		tar -C $WUPROOT/$APPNAME/ -x -f $APPNAME.tar
   	''')
   	file('build/update').setExecutable(true, false)
}

task wzip(dependsOn: wbuild) << {
   	task (_wzip, type: Zip) {
   		from "build/wzip/"
   		archiveName 'walnut-'+version_tag+'.zip'
   		destinationDir buildDir
   	}.execute()
}

task wtar(dependsOn: wbuild) << {
   	task (_wtar, type: Tar) {
   		from "build/wzip/"
   		archiveName 'walnut.tar'
   		destinationDir buildDir
   	}.execute()

   	task (_wtar2, type: Tar) {
   		from "build/update"
   		from "build/walnut.tar"
   		archiveName 'walnut-'+version_tag+'.tgz'
   		destinationDir buildDir
   		compression Compression.GZIP
   	}.execute()
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
